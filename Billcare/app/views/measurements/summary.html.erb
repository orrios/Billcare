


<div class="col-md-8 col-md-offset-2">
  <div class="text-center">
    <h2>Cantidad consumida en las distintas cuentas</h2><h4> (costo de la cuenta (pesos) / límite establecido (pesos))</h4> <br>

    <div class="row">
  <div class="col-md-4"><div class="round_border_electricity"><b>Electricidad</b><div id="report_electricidad"><%= @data1[-1][:y] %> / 5.6</div></div></div>
  <div class="col-md-4"><div class="round_border_gas"><b>Gas</b><div id="report_gas"></div></div></div>
  <div class="col-md-4"><div class="round_border_water"><b>Agua</b><div id="report_agua"></div></div></div>
</div>
<br><br>
    <h2>Gráficos de evolución de la cuenta durante el mes</h2>

  </div>
  </div>


<div id="container_electricidad" style="min-width: 310px; height: 400px; margin: 90px "></div><br>
<div id="container_agua" style="min-width: 310px; height: 400px; margin: 90px "></div>
<div id="container_gas" style="min-width: 310px; height: 400px; margin: 90px "></div>






<script>$(document).ready(function () {
  chart = new Highcharts.Chart({
    chart: {
      renderTo: 'container_electricidad',
      type: 'area'
    },
    credits: {
      enabled: false
    },
    title: {
      text: 'Consumo del mes actual (Clp)',
      style: {"color": "#7070", "fontWeight": "bold"}
    },
    subtitle: {
      text: ''
    },
    xAxis: {
      max: <%= @max_time %>,
      type: 'datetime',
      title: {
        text: 'Tiempo',
        style: {"color": "#7070", "fontWeight": "bold"}
      }


    },
    yAxis: {
      title: {
        text: 'Valor (Clp)',
        style: {"color": "#7070", "fontWeight": "bold"}
      }
    },
    plotOptions: {
      series: {
        marker: {
          enabled: false,
          symbol: 'circle',
          turboThreshold: 0,
          radius: 2
        },

        fillOpacity: 0.5
      },
      flags: {
        tooltip: {
          xDateFormat: '%B %e, %Y'
        }
      }
    },


    series: [{
      color: "red",
      name: 'Limite establecido',
      type: "line",
      data: <%= @data2.to_json.html_safe %>,
      enableMouseTracking: false

    }, {
      name: 'Consumo',
      data: <%= @data1.to_json.html_safe %>,
      turboThreshold: 0
    },
      {color: "orange",
        name: 'Maximo optimo en el tiempo',
        type: "line",
        enableMouseTracking: false,
        data: <%= @data3.to_json.html_safe %>


      }

    ]
  });

});

</script>



<script>

  $(document).ready(function() {


    chart = new Highcharts.Chart({
      chart: {
        renderTo: 'container_gas',
        type: 'area',
        animation: Highcharts.svg, // don't animate in old IE
        marginRight: 10
//        events: {
  //        load: function() {
//
  //          // set up the updating of the chart each second
    //        var series = this.series[0];
      //      setInterval(function() {
        //      var x = (new Date()).getTime(), // current time
          //        y = series.yData[series.yData.length-1] + Math.random()*1500;
            //  last_data = y;
             // series.addPoint([x, y], true, false);
 //             document.getElementById('report_gas').innerHTML = parseInt(last_data,10).toString()+" / 50000"


   //         }, 4000);
     //     }
      //  }
      },
      credits: {
        enabled: false
      },
      title: {
        text: 'Gas'
      },
      xAxis: {
        title: {
          text: 'Tiempo',
          style: {"color": "#7070", "fontWeight": "bold"}
        },
        type: 'datetime',
        tickPixelInterval: 150
      },
      plotOptions: {
        series: {
          marker: {
            enabled: false
          },

          fillOpacity: 0.5
        },
        flags: {
          tooltip: {
            xDateFormat: '%B %e, %Y'
          }
        }
      },
      yAxis: {
        title: {
          text: 'Valor (Clp)',
          style: {"color": "#7070", "fontWeight": "bold"}
        },
        plotLines: [{
          value: 0,
          width: 1,
          color: '#808080'
        }]
      },
      tooltip: {
        formatter: function() {
          return '<b>' + this.series.name + '</b><br/>' +
              Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' +
              Highcharts.numberFormat(this.y, 2);
        }
      },
      legend: {
        enabled: false
      },
      exporting: {
        enabled: false
      },
      series: [{
        name: 'Cantidad consumida',
        data: (function() {
          // generate an array of random data
          var data = [],
              time = (new Date()).getTime(),
              i,
              last_data = 0;

          for (i = -29; i <= 0; i += 1) {
            last_data = last_data+Math.random()*1500;
            data.push({
              x: time + i * 4000,
              y: last_data
            });
          }
          document.getElementById('report_gas').innerHTML = parseInt(last_data,10).toString()+" / 50000";

          return data;
        }())
      },

        {
          color: "red",
          name: 'Limite establecido',
          type: "line",
          marker: {
            enabled: false
          },
          data: (function() {
            var data = [],
                time = (new Date()).getTime(),
                i;
            for (i = -29; i <= 30; i += 1) {
              data.push({
                x: time + i * 4000,
                y: 50000
              });
            }
            return data;
          }()),

          enableMouseTracking: false

        },
        {color: "orange",
          name: 'Maximo optimo en el tiempo',
          type: "line",
          marker: {
            enabled: false
          },
          enableMouseTracking: false,
          data: (function() {
            var data = [],
                time = (new Date()).getTime(),
                i,
                last_data = 0;
            for (i = -29; i <= 30; i += 1) {
              last_data = last_data+50000/60;
              data.push({
                x: time + i * 4000,
                y: last_data
              });
            }
            return data;
          }())


        }




      ]
    });
  });

</script>



<script>

  $(document).ready(function() {


    chart = new Highcharts.Chart({
      chart: {
        renderTo: 'container_agua',
        type: 'area',
        animation: Highcharts.svg, // don't animate in old IE
        marginRight: 10
      },
      credits: {
        enabled: false
      },
      title: {
        text: 'Agua'
      },
      xAxis: {
        title: {
          text: 'Tiempo',
          style: {"color": "#7070", "fontWeight": "bold"}
        },
        type: 'datetime',
        tickPixelInterval: 150
      },
      plotOptions: {
        series: {
          marker: {
            enabled: false
          },

          fillOpacity: 0.5
        },
        flags: {
          tooltip: {
            xDateFormat: '%B %e, %Y'
          }
        }
      },
      yAxis: {
        title: {
          text: 'Valor (Clp)',
          style: {"color": "#7070", "fontWeight": "bold"}
        },
        plotLines: [{
          value: 0,
          width: 1,
          color: '#808080'
        }]
      },
      tooltip: {
        formatter: function() {
          return '<b>' + this.series.name + '</b><br/>' +
              Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' +
              Highcharts.numberFormat(this.y, 2);
        }
      },
      legend: {
        enabled: false
      },
      exporting: {
        enabled: false
      },
      series: [{
        name: 'Cantidad consumida',
        data: (function() {
          // generate an array of random data
          var data = [],
              time = (new Date()).getTime(),
              i,
              last_data = 0;

          for (i = -29; i <= 0; i += 1) {
            last_data = last_data+Math.random()*1500;
            data.push({
              x: time + i * 4000,
              y: last_data
            });
          }
          document.getElementById('report_agua').innerHTML = parseInt(last_data,10).toString()+" / 50000";
          return data;
        }())
      },

        {
          color: "red",
          name: 'Limite establecido',
          type: "line",
          marker: {
            enabled: false
          },
          data: (function() {
            var data = [],
                time = (new Date()).getTime(),
                i;
            for (i = -29; i <= 30; i += 1) {
              data.push({
                x: time + i * 4000,
                y: 50000
              });
            }
            return data;
          }()),

          enableMouseTracking: false

        },
        {color: "orange",
          name: 'Maximo optimo en el tiempo',
          type: "line",
          marker: {
            enabled: false
          },
          enableMouseTracking: false,
          data: (function() {
            var data = [],
                time = (new Date()).getTime(),
                i,
                last_data = 0;
            for (i = -29; i <= 30; i += 1) {
              last_data = last_data+50000/60;
              data.push({
                x: time + i * 4000,
                y: last_data
              });
            }
            return data;
          }())


        }




      ]
    });
  });

</script>